#BlueJ class context
comment0.params=
comment0.target=Board()
comment0.text=\r\n\ Constructor\ for\ Board\ Class\r\n
comment1.params=
comment1.target=void\ placeShips()
comment1.text=\r\n\ \r\n
comment10.params=
comment10.target=boolean\ shipCollision()
comment10.text=\r\n\ method\ shipCollision()\ is\ a\ check\ to\ see\ if\ the\ bearing\ of\ a\ ship\ causes\ it\ to\ collide\ with\ the\ other.\r\n
comment11.params=
comment11.target=boolean\ shipOnGrid()
comment11.text=\r\n\ method\ shipOnGrid()\ is\ a\ validation\ method\ to\ check\ if\ the\ ship\ was\ place\ on\ the\ battle\ grid\r\n
comment12.params=k
comment12.target=void\ wait(int)
comment12.text=\r\n\ method\ wait()\ causes\ a\ delay\ so\ messages\ can\ be\ read\ beforethey\ are\ cleared\ from\ the\ console.\ \r\n
comment13.params=
comment13.target=java.lang.String[][]\ getPlayerBoard()
comment13.text=\r\n\ Method\ getPlayerBoard\ returns\ the\ updated\ board\ for\ human\ player\r\n
comment14.params=
comment14.target=java.lang.String[][]\ getComputerBoard()
comment14.text=\r\n\ Method\ getComputerBoard\ returns\ the\ updated\ board\ for\ computer\ player\r\n
comment2.params=
comment2.target=void\ checkIfHit()
comment2.text=\r\n\ method\ checkIfHit()\ checks\ to\ see\ if\ the\ selection\ by\ the\ player\ or\ computer\ hit\ a\ ship\r\n
comment3.params=rx\ ry
comment3.target=boolean\ validateLocation(int,\ java.lang.String)
comment3.text=\r\n\ method\ validateLocation\ validates\ player\ input\ to\ determine\ whether\ the\ ship\ rudder\ can\r\n\ \ \ \ \ \ \ \ placed\ at\ that\ location.\r\n\ \r\n\ @param\ x\ holds\ the\ input\ rudder\ location\ on\ x\ axis\r\n\ @param\ y\ holds\ the\ input\ rudder\ location\ on\ y\ axis\r\n\ @param\ validLocation\ is\ a\ boolean\ indicating\ whether\ location\ input\ is\ valid\r\n\ @return\ validLocation\ is\ returned\ when\ validation\ has\ succeded.\r\n
comment4.params=bearing
comment4.target=boolean\ validateBearing(java.lang.String)
comment4.text=\r\n\ method\ validateBearing()\ calls\ to\ other\ methods,\ such\ as\ validBearing(),\ shipCollision(),\ and\ shipOnGrid()\r\n\ \ \ \ \ \ \ \ to\ determine\ if\ input\ is\ valid.\ Depending\ on\ results,\ this\ method\ writes\ to\ the\ console\ to\ inform\r\n\ \ \ \ \ \ \ \ the\ player\ of\ errors,\ otherwise\ it\ returns\ Boolean\ validBearing\ as\ true.\r\n\ \ \ \ \ \ \ \ \r\n\ @params\ b\ is\ a\ string\ that\ holds\ the\ bearing\ input\ string\r\n\ @params\ validBearing\ is\ a\ boolean\ that\ is\ first\ set\ to\ false\r\n\ @return\ validBearing\ is\ returned\ to\ indicate\ that\ validation\ of\ ships\ bearing\ has\ succeded.\r\n
comment5.params=
comment5.target=java.lang.String\ displayPlayerBoard()
comment5.text=\r\n\ method\ displayPlayerBoard\ loops\ through\ the\ pBoard\ array\ and\ builds\ a\ string\ for\ display,\r\n\ \r\n\ @params\ result\ is\ string\ built\ to\ return\ the\ contents\ of\ pBoard\r\n
comment6.params=
comment6.target=java.lang.String\ displayComputerBoard()
comment6.text=\r\n\ method\ displayComputerBoard\ loops\ through\ the\ cBoard\ array\ and\ builds\ a\ string\ for\ display\r\n\ \r\n\ @params\ result\ is\ string\ built\ to\ return\ the\ contents\ of\ cBoard\r\n
comment7.params=
comment7.target=void\ drawBoard()
comment7.text=\r\n\ method\ -\ drawBoard\ redraws\ the\ current\ status\ of\ each\ game\ board\r\n\ \ \r\n
comment8.params=str
comment8.target=boolean\ validStr(java.lang.String)
comment8.text=\r\n\ method\ validStr\ validates\ input\ to\ determine\ ships\ rudder\ location\r\n
comment9.params=ber
comment9.target=boolean\ validBearing(java.lang.String)
comment9.text=\r\n\ method\ validBearing()\ validates\ input\ to\ determine\ ships\ bearing\r\n
numComments=15
